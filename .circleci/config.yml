version: 2.1
aliases:
  when_release: &when_release
    condition:
      matches: {pattern: /^release\/.*$/, value: << pipeline.git.branch >>}
  node_env: &node_env
    docker:
      - image: cimg/node:lts
    working_directory: ~/repo
commands:
  npm_login:
    steps:
      - run:
          name: Authenticate NPM
          command: |
            npm set "@labfolder:registry" "https://registry.npmjs.org/"
            npm set "//registry.npmjs.org/:_authToken" "${NPM_TOKEN_WRITE}"
  yarn_cache_install:
    steps:
      - restore_cache:
          key: packages-{{ checksum "yarn.lock" }}-{{ checksum "package.json" }}
      - run: |
          sudo corepack enable
          yarn install --immutable
      - save_cache:
          paths:
            - ~/.yarn/berry
          key: packages-{{ checksum "yarn.lock" }}-{{ checksum "package.json" }}
  install_gh:
    steps:
      - run:
          name: Install GitHub CLI
          command: |
            cli_url=$(curl -s --header "X-GitHub-Api-Version:2022-11-28" https://api.github.com/repos/cli/cli/releases/tags/v2.21.1 | grep -o "http.*linux_amd64.deb")
            curl -L -o ~/cli.deb ${cli_url}
            sudo apt install ~/cli.deb
            echo ${GITHUB_ACCESS_TOKEN} | gh auth login --with-token
            gh auth status

jobs:
  check:
    <<: *node_env
    steps:
      - checkout
      - yarn_cache_install
      - when:
          <<: *when_release
          steps:
            - run:
                name: Confirm release strategy was applied
                command: |
                  if [ -n "$(ls -A ~/repo/.yarn/versions)" ]; then
                    exit 1
                  fi
      - unless:
          <<: *when_release
          steps:
            - run: yarn version check
  lint:
    <<: *node_env
    steps:
      - checkout
      - yarn_cache_install
      - run: yarn lint
  release:
    <<: *node_env
    steps:
      - checkout
      - install_gh
      - npm_login
      - yarn_cache_install
      - run: yarn yolo
      - run:
          name: Publish GitHub release
          command: |
            VERSION=v$(jq -r '.version' package.json)
            gh repo set-default
            gh release create $VERSION --title "$VERSION" --target $CIRCLE_SHA1 --generate-notes

workflows:
  tests:
    jobs:
      - check
      - lint
      - release-approval:
          filters: &filters_only_release_branches
            branches:
              only: /release\/.*/
          type: approval
          requires:
            - check
            - lint
      - release:
          filters: *filters_only_release_branches
          context:
            - gh-repo-token
            - npm-publishing
          requires:
            - release-approval
